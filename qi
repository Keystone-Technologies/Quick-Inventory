#!/usr/bin/perl

use 5.010;
use strict;
use warnings;
#use diagnostics;

use Data::Dumper;
use IO::Prompt;
use Config::General;
use Getopt::Long;
use Date::Manip;

use Net::Google::Spreadsheets;
use Net::Google::AuthSub;

my $help = 0;
my %set = ();
GetOptions(
	'help|h' => \$help,
	'set|s=s' => \%set,
);
die "Usage: $0 --set customer=Customer ... [options] [SS] [WS]\n" if $help;

my $qifile;
do { $qifile=$_ if -e $_; } foreach '/etc/qi.conf', "$ENV{HOME}/.qi", '.qi';
my $qiconf = new Config::General($qifile);
my %qiconf = $qiconf->getall;
my %thisqi = map { s/\W//g; lc($_) => '' } split m!;!, $qiconf{header};
$thisqi{_input} = '';
my %lastqi = %thisqi;
my %pastqi = %thisqi;

my $auth = Net::Google::AuthSub->new();
my $response = $auth->login($qiconf{user}, $qiconf{pass});
die "Authentication Failure: " . $response->error unless $response->is_success;

my $service = Net::Google::Spreadsheets->new(
	username => $qiconf{user},
	password => $qiconf{pass},
);

print "Opening SS ", $ARGV[0] || $qiconf{ss}, "\n";
my $sheet = $service->spreadsheet({title => $ARGV[0] || $qiconf{ss}}) or die "$!\n";
print "Opening SS ", $ARGV[1] || $qiconf{ws} || 'Sheet1', "\n";
my $ws = $sheet->worksheet({title => $ARGV[1] || $qiconf{ws} || 'Sheet1'}) or die "$!\n";

my $prompt = '';
while ( 1 ) {
	prompt "qi".($thisqi{cogstonetag}?" $thisqi{cogstonetag}":'').($thisqi{_input}?" $thisqi{_input}":'').($thisqi{$thisqi{_input}}?" $thisqi{$thisqi{_input}}":'')."> ";
	last if /^(0|quit|save)$/;

	if ( /^(\d{6}[AB]|save)$/ ) {
		my $row = $ws->row({sq => "cogstonetag = \"$_\""}) unless /^save$/;
		if ( $row ) {
			my $content = $row->content;
			$pastqi{$content->{cogstonetag}}{$_}=$content->{$_} foreach grep { $content->{$_} } keys %{$content};
		}
		if ( $thisqi{cogstonetag} ) {
			if ( $_ eq $thisqi{cogstonetag} ) {
				print STDERR "Resetting input data for $_\n";
				$thisqi{$_} = '' foreach grep { /^_?[a-z]+$/ } keys %thisqi;
				$thisqi{cogstonetag} = $_ unless /^save$/;
				do { $thisqi{$_} = $set{$_} eq 'now' ? UnixDate(ParseDate('now'), '%Y-%m-%d') : $set{$_}; } foreach keys %set;
			} else {
				if ( $thisqi{assettag} ) {
					print "Updating SS\n";
					if ( exists $pastqi{$thisqi{cogstonetag}} ) {
						my $row = $ws->row({sq => "cogstonetag = \"$thisqi{cogstonetag}\""});
						$row->content({map { lc($_) => $thisqi{$_} } grep { /^[A-Za-z]/ && !/^cogstonetag$/ && $thisqi{$_} } keys %thisqi});
					} else {
						$ws->add_row({map { lc($_) => $thisqi{$_} } grep { /^[A-Za-z]/ } keys %thisqi});
					}
					%lastqi = %thisqi;
					$thisqi{$_} = '' foreach grep { /^_?[a-z]+$/ } keys %thisqi;
					$thisqi{cogstonetag} = $_ unless /^save$/;
					do { $thisqi{$_} = $set{$_} eq 'now' ? UnixDate(ParseDate('now'), '%Y-%m-%d') : $set{$_}; } foreach keys %set;
					$thisqi{$_}=$pastqi{$thisqi{cogstonetag}}{$_} foreach grep { $pastqi{$thisqi{cogstonetag}}{$_} } keys %{$pastqi{$thisqi{cogstonetag}}};
				} elsif ( $thisqi{_input} ) {	# && any of /^[a-z]/ ne ''
					print STDERR "Minimum client asset tag field missing.\n";
				} else {
					$thisqi{cogstonetag} = $_ unless /^save$/;
					do { $thisqi{$_} = $set{$_} eq 'now' ? UnixDate(ParseDate('now'), '%Y-%m-%d') : $set{$_}; } foreach keys %set;
					$thisqi{$_}=$pastqi{$thisqi{cogstonetag}}{$_} foreach grep { $pastqi{$thisqi{cogstonetag}}{$_} } keys %{$pastqi{$thisqi{cogstonetag}}};
				}
			}
		} else {
			$thisqi{cogstonetag} = $_ unless /^save$/;
			do { $thisqi{$_} = $set{$_} eq 'now' ? UnixDate(ParseDate('now'), '%Y-%m-%d') : $set{$_}; } foreach keys %set;
			$thisqi{$_}=$pastqi{$thisqi{cogstonetag}}{$_} foreach grep { $pastqi{$thisqi{cogstonetag}}{$_} } keys %{$pastqi{$thisqi{cogstonetag}}};
		}
	} elsif ( /^QIV_(\w+)$/ ) {
		print STDERR "$1 = $thisqi{$1}\n";
	} elsif ( /^QI_(\w+)$/ && $thisqi{cogstonetag} ) {
		if ( grep { $_ eq lc($1) } keys %thisqi ) {
			$thisqi{_input} = lc($1);
		} else {
			print STDERR "Unrecognized field $1\n";
		}
	} elsif ( /^.*$/ && $thisqi{cogstonetag} && $thisqi{_input} ) {
		$thisqi{$thisqi{_input}} = $_;
	} else {
		print STDERR "Unrecognized input $_.\n";
	}
}
